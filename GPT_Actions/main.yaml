openapi: 3.1.0
info:
  title: User Management API
  description: API for user registration, login, and goal assignment with authentication and role-based access control.
  version: 1.0.0
servers:
  - url: https://fusionobjects.com
    description: Main API server for user management

paths:
  /register:
    post:
      operationId: register
      summary: Registers a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: Username for the new user.
                password:
                  type: string
                  description: Password for the new user.
                role:
                  type: string
                  description: Role of the new user (default is 'user').
      responses:
        "201":
          description: User registered successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User registered successfully
        "400":
          description: Missing required fields.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing field: {field}

  /login:
    post:
      operationId: login
      summary: Logs in a user and returns a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: Username of the user.
                password:
                  type: string
                  description: Password of the user.
      responses:
        "200":
          description: User logged in successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for the authenticated user.
        "400":
          description: Missing required fields.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing field: {field}
        "401":
          description: Invalid credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid credentials

  /signout:
    post:
      operationId: signout
      summary: Signs out the current user by invalidating the JWT token.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User signed out successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User signed out successfully
        "401":
          description: Token is missing or invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    examples:
                      TokenMissing:
                        summary: Token is missing
                        value: Token is missing!
                      TokenInvalid:
                        summary: Token is invalid
                        value: Token is invalid!
                      TokenInvalidated:
                        summary: Token has been invalidated
                        value: Token has been invalidated!

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
