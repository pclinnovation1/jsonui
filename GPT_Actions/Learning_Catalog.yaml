openapi: 3.1.0
info:
  title: Learning Catalog Management API
  description: API to manage learning communities within an organization.
  version: 1.0.0
servers:
  - url: https://fusionobjects.com
    description: Main API server for communities management

paths:
  /learningCatalog/offerings/view:
    post:
      operationId: viewOffering
      summary: Views details of an offering.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                offeringId:
                  type: string
                  description: The ID of the offering to view.
      responses:
        "200":
          description: Offering details retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  About_This_Record: { type: array, items: { type: string } }
                  Columns: { type: array, items: { type: string } }
        "400":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: { type: string }

  /learningCatalog/offerings/create:
    post:
      operationId: createOffering
      summary: Creates a new offering in the learning catalog.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Title
                - Offering_Number
                - Publish_Start_Date
                - Publish_End_Date
              properties:
                General_Information:
                  type: object
                  properties:
                    Basic_Information:
                      type: object
                      properties:
                        Title: { type: string }
                        Description: { type: string }
                        Offering_Number: { type: string }
                        Offering_Type: { type: string }
                        Publish_Start_Date: { type: string, format: date }
                        Publish_End_Date: { type: string, format: date }
                    Offering_Details:
                      type: object
                      properties:
                        Offering_Start_Date: { type: string, format: date }
                        Offering_End_Date: { type: string, format: date }
                        Primary_Classroom: { type: string }
                        Language: { type: string }
                        Facilitator_Type: { type: string }
                        Offering_Coordinator: { type: string }
                    Comments: { type: string }
                    Override_conversation_system_setup_configuration:
                      { type: string }
                Related_Materials:
                  type: object
                  properties:
                    Visibility: { type: array, items: { type: string } }
                    Attachment: { type: array, items: { type: string } }
                Capacity_Rules:
                  type: object
                  properties:
                    Booked_Seats: { type: number }
                    Capacity_Rules: { type: string }
                Pricing:
                  type: object
                  properties:
                    Pricing: { type: number }
                    Override_pricing: { type: boolean }
                Payment:
                  type: object
                  properties:
                    Override_payment_type: { type: string }
                Learning_Offering_Additional_Attributes:
                  type: object
                  properties:
                    Learning_Item_Additional_Attributes: { type: string }
      responses:
        "200":
          description: Offering successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }
        "400":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: { type: string }

  /learningCatalog/offerings/export:
    post:
      operationId: exportOfferings
      summary: Exports offering details to an Excel file.
      responses:
        "200":
          description: Offering details exported successfully.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          description: Export failed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: { type: string }

  /learningCatalog/offerings/edit:
    post:
      operationId: editOffering
      summary: Edits an existing offering in the learning catalog.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Offering_ID
              properties:
                Offering_ID: { type: string }
                General_Information:
                  type: object
                  properties:
                    Basic_Information:
                      type: object
                      properties:
                        Title: { type: string }
                        Description: { type: string }
                        Offering_Number: { type: string }
                        Offering_Type: { type: string }
                        Publish_Start_Date: { type: string, format: date }
                        Publish_End_Date: { type: string, format: date }
                    Offering_Details:
                      type: object
                      properties:
                        Offering_Start_Date: { type: string, format: date }
                        Offering_End_Date: { type: string, format: date }
                        Primary_Classroom: { type: string }
                        Language: { type: string }
                        Facilitator_Type: { type: string }
                        Offering_Coordinator: { type: string }
                    Comments: { type: string }
                    Override_conversation_system_setup_configuration:
                      { type: string }
                Related_Materials:
                  type: object
                  properties:
                    Visibility: { type: array, items: { type: string } }
                    Attachment: { type: array, items: { type: string } }
                Capacity_Rules:
                  type: object
                  properties:
                    Booked_Seats: { type: number }
                    Capacity_Rules: { type: string }
                Pricing:
                  type: object
                  properties:
                    Pricing: { type: number }
                    Override_pricing: { type: boolean }
                Payment:
                  type: object
                  properties:
                    Override_payment_type: { type: string }
                Learning_Offering_Additional_Attributes:
                  type: object
                  properties:
                    Learning_Item_Additional_Attributes: { type: string }
      responses:
        "200":
          description: Offering successfully edited.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }
        "400":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: { type: string }

  /learningCatalog/offerings/addLearners:
    post:
      operationId: addLearners
      summary: Adds learners to an offering.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Offering_ID
                - Learners
              properties:
                Offering_ID: { type: string }
                Learners:
                  type: array
                  items:
                    type: object
                    properties:
                      Name: { type: string }
                      Assignment_Profile_Number: { type: string }
                      Assignment_Type: { type: string }
                      Description: { type: string }
                      Start_Date: { type: string, format: date }
                      Assign_Course: { type: string }
                      Assign_As: { type: string }
                      Note: { type: string }
                      Start_on_or_After: { type: string, format: date }
                      Complete_By: { type: string, format: date }
                      Purchase_Order_Number: { type: string }
                      Justification: { type: string }
                      Context_Segment: { type: string }
                      Visibility: { type: array, items: { type: string } }
                      Attachment: { type: array, items: { type: string } }
      responses:
        "200":
          description: Learners successfully added to the offering.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }
        "400":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: { type: string }

  /communities/view:
    post:
      operationId: viewCommunity
      summary: Views details of a community.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                communityId:
                  type: string
                  description: The ID of the community to view.
      responses:
        "200":
          description: Community details retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  About_This_Record: { type: array, items: { type: string } }
                  Columns: { type: array, items: { type: string } }
        "400":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: { type: string }

  /communities/create:
    post:
      operationId: createLearningCommunity
      summary: Creates a new learning community.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Community_Name
                - Community_Type
              properties:
                Community_Name: { type: string }
                Community_Type: { type: string }
                Branding_Image: { type: string }
                Description: { type: string }
                Privacy: { type: string }
                Member_Contribution: { type: string }
                Actions:
                  type: object
                  properties:
                    Submit: { type: boolean }
      responses:
        "200":
          description: Learning community successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }
        "400":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: { type: string }

  /communities/export:
    post:
      operationId: exportCommunities
      summary: Exports community details to an Excel file.
      responses:
        "200":
          description: Community details exported successfully.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          description: Export failed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: { type: string }

  /communities/edit:
    post:
      operationId: editCommunity
      summary: Edits an existing community.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Community_ID
              properties:
                Community_ID: { type: string }
                Community_Name: { type: string }
                Community_Type: { type: string }
                Branding_Image: { type: string }
                Description: { type: string }
                Trailer: { type: string }
                Privacy: { type: string }
                Member_Contribution: { type: string }
                Related_Materials:
                  type: object
                  properties:
                    Visibility: { type: array, items: { type: string } }
                    Attachment: { type: array, items: { type: string } }
      responses:
        "200":
          description: Community successfully edited.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }
        "400":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: { type: string }

  /communities/addMember:
    post:
      operationId: addCommunityMember
      summary: Adds a member to a community.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Community_ID
                - Assignment_Profile_Number
              properties:
                Community_ID: { type: string }
                Assignment_Profile_Number: { type: string }
                Note: { type: string }
      responses:
        "200":
          description: Member successfully added to the community.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }
        "400":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: { type: string }

  /communities/delete:
    post:
      operationId: deleteCommunity
      summary: Deletes an existing community.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Community_ID
              properties:
                Community_ID: { type: string }
      responses:
        "200":
          description: Community successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }
        "400":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: { type: string }

  /learningCatalog/courses/view:
    post:
      operationId: viewCourse
      summary: Views details of a course.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                courseId:
                  type: string
                  description: The ID of the course to view.
      responses:
        "200":
          description: Course details retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  About_This_Record: { type: array, items: { type: string } }
                  Columns: { type: array, items: { type: string } }
        "400":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: { type: string }

  /learningCatalog/courses/create:
    post:
      operationId: createCourse
      summary: Creates a new course in the learning catalog.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Title
                - Publish_Start_Date
                - Publish_End_Date
                - Course_Number
              properties:
                General_Information:
                  type: object
                  properties:
                    Basic_Information:
                      type: object
                      properties:
                        Title: { type: string }
                        Syllabus: { type: string }
                        Short_Description: { type: string }
                        Publish_Start_Date: { type: string, format: date }
                        Publish_End_Date: { type: string, format: date }
                        Course_Number: { type: string }
                    Other_Details:
                      type: object
                      properties:
                        Minimum_Expected_Effort: { type: number }
                        Maximum_Expected_Effort: { type: number }
                        Currency: { type: string }
                        Minimum_Price: { type: number }
                        Maximum_Price: { type: number }
                        Branding_Image: { type: string }
                        Trailer: { type: string }
                    Comments:
                      type: object
                      properties:
                        Override_conversation_system_setup_configuration:
                          { type: string }
                    Related_Materials:
                      type: object
                      properties:
                        Visibility: { type: array, items: { type: string } }
                        Attachment: { type: array, items: { type: string } }
                    Learning_Item_Additional_Attributes:
                      type: object
                      properties:
                        Topic: { type: string }
                Default_Offering_Attributes:
                  type: object
                  properties:
                    Training_Supplier_or_Instructor:
                      type: object
                      properties:
                        Facilitator_Type: { type: string }
                    Pricing:
                      type: object
                      properties:
                        Currency: { type: string }
                        Add_Line_Item:
                          type: object
                          properties:
                            Line_Item: { type: string }
                            Price: { type: number }
                            Required: { type: boolean }
                        Remove: { type: boolean }
                    Payment:
                      type: object
                      properties:
                        Payment_Type: { type: string }
                    Capacity_Rules:
                      type: object
                      properties:
                        Capacity_Rules:
                          type: object
                          properties:
                            Minimum_Capacity: { type: number }
                            Maximum_Capacity: { type: number }
                            Waitlist_Mode: { type: string }
                            Waitlist_Rules:
                              type: object
                              properties:
                                Allow_joining_the_waitlist_from_self_service:
                                  { type: boolean }
                Default_Assignment_Rules:
                  type: object
                  properties:
                    Learning_Assignment_Rules:
                      type: object
                      properties:
                        Initial_Assignment_Status: { type: string }
                        Validity_Period_Starts: { type: string, format: date }
                        Validity_Period_Expires: { type: string, format: date }
      responses:
        "200":
          description: Course successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }
        "400":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: { type: string }

  /learningCatalog/courses/edit:
    post:
      operationId: editCourse
      summary: Edits an existing course in the learning catalog.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Course_ID
              properties:
                Course_ID: { type: string }
                General_Information:
                  type: object
                  properties:
                    Basic_Information:
                      type: object
                      properties:
                        Title: { type: string }
                        Syllabus: { type: string }
                        Short_Description: { type: string }
                        Publish_Start_Date: { type: string, format: date }
                        Publish_End_Date: { type: string, format: date }
                        Course_Number: { type: string }
                    Other_Details:
                      type: object
                      properties:
                        Minimum_Expected_Effort: { type: number }
                        Maximum_Expected_Effort: { type: number }
                        Currency: { type: string }
                        Minimum_Price: { type: number }
                        Maximum_Price: { type: number }
                        Branding_Image: { type: string }
                        Trailer: { type: string }
                    Comments:
                      type: object
                      properties:
                        Override_conversation_system_setup_configuration:
                          { type: string }
                    Related_Materials:
                      type: object
                      properties:
                        Visibility: { type: array, items: { type: string } }
                        Attachment: { type: array, items: { type: string } }
                    Learning_Item_Additional_Attributes:
                      type: object
                      properties:
                        Topic: { type: string }
                Default_Offering_Attributes:
                  type: object
                  properties:
                    Training_Supplier_or_Instructor:
                      type: object
                      properties:
                        Facilitator_Type: { type: string }
                    Pricing:
                      type: object
                      properties:
                        Currency: { type: string }
                        Add_Line_Item:
                          type: object
                          properties:
                            Line_Item: { type: string }
                            Price: { type: number }
                            Required: { type: boolean }
                        Remove: { type: boolean }
                    Payment:
                      type: object
                      properties:
                        Payment_Type: { type: string }
                    Capacity_Rules:
                      type: object
                      properties:
                        Capacity_Rules:
                          type: object
                          properties:
                            Minimum_Capacity: { type: number }
                            Maximum_Capacity: { type: number }
                            Waitlist_Mode: { type: string }
                            Waitlist_Rules:
                              type: object
                              properties:
                                Allow_joining_the_waitlist_from_self_service:
                                  { type: boolean }
                Default_Assignment_Rules:
                  type: object
                  properties:
                    Learning_Assignment_Rules:
                      type: object
                      properties:
                        Initial_Assignment_Status: { type: string }
                        Validity_Period_Starts: { type: string, format: date }
                        Validity_Period_Expires: { type: string, format: date }
      responses:
        "200":
          description: Course successfully edited.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: { type: string }
        "400":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: { type: string }

  /learningCatalog/courses/export:
    post:
      operationId: exportCourses
      summary: Exports course details to an Excel file.
      responses:
        "200":
          description: Course details exported successfully.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "400":
          description: Export failed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error: { type: string }
