openapi: 3.1.0
info:
  title: Leave Calculations API
  description: API for calculating leave accruals.
  version: 1.0.0
servers:
  - url: https://app1.fusionobjects.com
    description: Main API server for leave calculations

paths:
  /processHrInfoUK:
    post:
      operationId: processHrInformation
      summary: Process HR information for UK employees.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: HR information data to be processed
              properties:
                First_Name:
                  type: string
                  example: "John"
                Last_Name:
                  type: string
                  example: "Doe"
                Job_Code:
                  type: string
                  example: "DEV123"
      responses:
        "200":
          description: HR information processed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Data inserted successfully"
        "400":
          description: Missing or invalid input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid data"
        "500":
          description: Database connection error or other server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Could not connect to database"

  /calculate_leave_accruals:
    post:
      operationId: calculateLeaveAccruals
      summary: Calculate leave accruals for employees.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveAccrualsRequest'
      responses:
        "200":
          description: Leave accruals calculated and stored successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmation message
        "400":
          description: Invalid input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: No employees found for the provided criteria.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /course/enroll:
    post:
      operationId: enrollEmployee
      summary: Enrolls an employee in a course offering.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Offering_Title:
                  type: string
                Enrollment_Date:
                  type: string
                  format: date
                Offering_Number:
                  type: string
                Person_Name:
                  type: string
              required:
                - Offering_Title
                - Enrollment_Date
                - Person_Name
      responses:
        "200":
          description: Employee enrolled successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Employee enrolled successfully.
        "400":
          description: Invalid input data or multiple offerings found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  offerings:
                    type: array
                    items:
                      type: object
                      properties:
                        Offering_Number:
                          type: string
                        Offering_Title:
                          type: string
                        Offering_Format:
                          type: string
                        Active_Learners:
                          type: integer
                        Maximum_Learners:
                          type: integer
        "404":
          description: Offering or employee not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /course/withdraw:
    post:
      operationId: withdrawEmployee
      summary: Withdraws an employee from a course offering.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Offering_Title:
                  type: string
                Offering_Number:
                  type: string
                Person_Name:
                  type: string
              required:
                - Offering_Title
                - Person_Name
      responses:
        "200":
          description: Employee withdrawn successfully and waitlist updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Employee withdrawn successfully and waitlist updated.
        "400":
          description: Invalid input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  offerings:
                    type: array
                    items:
                      type: object
                      properties:
                        Offering_Number:
                          type: string
                        Offering_Title:
                          type: string
                        Offering_Format:
                          type: string
                        Active_Learners:
                          type: integer
                        Maximum_Learners:
                          type: integer
        "404":
          description: Offering or employee not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /course/recommend:
    post:
      operationId: recommendCourse
      summary: Recommends courses based on job family.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Job_Family:
                  type: string
                Number_of_Courses:
                  type: integer
                  default: 5
              required:
                - Job_Family
      responses:
        "200":
          description: Courses recommended successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    Course_Name:
                      type: string
                    Predicted_Rating:
                      type: number
                    Cosine_Similarity:
                      type: number
                    Combined_Score:
                      type: number
                    Volatility:
                      type: number

  /course/assign:
    post:
      operationId: assignCourse
      summary: Assigns courses to employees based on recent changes.
      responses:
        "200":
          description: Courses assigned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  assigned_courses:
                    type: array
                    items:
                      type: object
                      properties:
                        message:
                          type: string
                          example: Courses assigned successfully.

  /course/renew:
    post:
      operationId: renewCourses
      summary: Renews courses for employees within a specified date range.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                from_date:
                  type: string
                  format: date
                to_date:
                  type: string
                  format: date
              required:
                - from_date
                - to_date
      responses:
        "200":
          description: Courses renewed successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        message:
                          type: string
                          example: Courses renewed successfully.
        "400":
          description: Invalid input data or date format.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  
  /goal/assign:
    post:
      operationId: assignGoal
      summary: Assigns goals to employees based on eligibility profiles.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Goal_Name:
                  type: string
                Eligibility_Profile_Name:
                  type: string
              required:
                - Goal_Name
                - Eligibility_Profile_Name
      responses:
        "200":
          description: Goal assigned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Assigned {goal_name} to eligible employees.
        "400":
          description: Missing required fields.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Goal_Name and Eligibility_Profile_Name are required.
        "404":
          description: Goal or eligibility profile not found, or no eligible employees.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /leave/application/apply:
    post:
      operationId: submitLeaveApplication
      summary: Submit a leave application and update leave balances.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeaveApplicationRequest'
      responses:
        "200":
          description: Leave application submitted successfully and leave balance updated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Confirmation message
        "400":
          description: Invalid input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Employee not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Could not connect to database or error inserting data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /leave/application/view:
    post:
      operationId: viewLeaveApplication
      summary: View leave applications based on provided filters.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Employee_Name:
                  type: string
                  description: Full name of the employee (First and Last name).
                Leave_Type:
                  type: string
                  description: Type of leave.
                Start_Date:
                  type: string
                  format: date
                  description: Start date of the leave.
                End_Date:
                  type: string
                  format: date
                  description: End date of the leave.
      responses:
        "200":
          description: Leave applications retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  leave_applications:
                    type: array
                    items:
                      type: object
                      properties:
                        Person_Number:
                          type: string
                        Employee_Name:
                          type: string
                        Leave_Type:
                          type: string
                        Start_Date:
                          type: string
                          format: date
                        End_Date:
                          type: string
                          format: date
                        Duration:
                          type: number
                        Reason_for_Absence:
                          type: string
                        Status:
                          type: string
                        Manager:
                          type: string
                        Timestamp:
                          type: string
                          format: date-time
        "400":
          description: Invalid input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: No leave applications found or employee not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
        "500":
          description: Could not connect to database or error retrieving data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /leave/application/edit:
    post:
      operationId: editLeaveApplication
      summary: Edit an existing leave application based on provided filters and updates.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Employee_Name:
                  type: string
                  description: Full name of the employee (First and Last name).
                  example: "John Doe"
                Old_Leave_Type:
                  type: string
                  description: Old type of leave.
                  example: "annual_leave"
                Old_Start_Date:
                  type: string
                  format: date
                  description: Old start date of the leave.
                  example: "2024-01-01"
                Old_End_Date:
                  type: string
                  format: date
                  description: Old end date of the leave.
                  example: "2024-01-10"
                New_Start_Date:
                  type: string
                  format: date
                  description: New start date of the leave.
                  example: "2024-01-02"
                New_End_Date:
                  type: string
                  format: date
                  description: New end date of the leave.
                  example: "2024-01-12"
                New_Leave_Type:
                  type: string
                  description: New type of leave.
                  example: "sick_leave"
                New_Reason_for_Absence:
                  type: string
                  description: New reason for absence.
                  example: "Medical reasons"
                New_Status:
                  type: string
                  description: New status of the leave application.
                  example: "Approved"
                New_Manager:
                  type: string
                  description: New manager's name.
                  example: "Jane Smith"
      responses:
        "200":
          description: Leave application updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Leave application updated successfully"
        "400":
          description: Invalid input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid Employee_Name. Please provide both first and last names."
        "404":
          description: Leave application not found or no matching leave application found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Leave application not found"
                  message:
                    type: string
                    example: "No matching leave application found"
        "500":
          description: Could not connect to database or error updating data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /leave/balances/edit:
    post:
      operationId: modifyLeaveBalance
      summary: Modify leave balances for an employee.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Employee_Name:
                  type: string
                  description: Full name of the employee (First and Last name).
                  example: "John Doe"
                Modifications:
                  type: array
                  items:
                    type: object
                    properties:
                      Leave_Type:
                        type: string
                        description: Type of leave to be modified.
                        example: "annual_leave"
                      Change:
                        type: number
                        description: Change in the leave balance (positive or negative).
                        example: -2
      responses:
        "200":
          description: Leave balances updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Leave balances updated successfully"
        "400":
          description: Invalid input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid Employee_Name. Please provide both first and last names."
        "404":
          description: Employee not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Employee not found"
        "500":
          description: Could not connect to database or error modifying data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /leave/balances/view:
    post:
      operationId: getLeaveBalance
      summary: Get leave balances for an employee.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Employee_Name:
                  type: string
                  description: Full name of the employee (First and Last name).
                  example: "John Doe"
      responses:
        "200":
          description: Leave balances retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  employee_name:
                    type: string
                    example: "John Doe"
                  leave_balances:
                    type: array
                    items:
                      type: object
                      properties:
                        Leave_Type:
                          type: string
                          example: "annual_leave"
                        Leave_Balance:
                          type: number
                          example: 15.0
        "400":
          description: Missing or invalid input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing Employee_Name in request body"
        "404":
          description: Employee not found or no leave balances found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "No employee found with the specified name"
        "500":
          description: Could not connect to database or error retrieving data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error retrieving data: ..."

  /send_email:
    post:
      operationId: sendEmail
      summary: Sends an email notification with the provided details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                function:
                  type: string
                subject:
                  type: string
                recipient_name:
                  type: string
                recipient_email:
                  type: string
                company_email:
                  type: string
                event:
                  type: string
                dynamic_params:
                  type: object
                  additionalProperties:
                    type: string
                attachments:
                  type: array
                  items:
                    type: object
                    properties:
                      path:
                        type: string
                      filename:
                        type: string
                      content_type:
                        type: string
      responses:
        "200":
          description: Email sent successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Email sent successfully.
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /letter/generate:
    post:
      operationId: generateLetter
      summary: Generates a letter based on input data and configuration.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                recipient_name:
                  type: string
                recipient_address:
                  type: string
                letter_body:
                  type: string
                letter_type:
                  type: string
              required:
                - recipient_name
                - recipient_address
                - letter_body
                - letter_type
      responses:
        "200":
          description: Letter generated successfully.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        "400":
          description: Invalid input data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /register:
    post:
      operationId: register
      summary: Registers a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: Username for the new user.
                password:
                  type: string
                  description: Password for the new user.
                role:
                  type: string
                  description: Role of the new user (default is 'user').
      responses:
        "201":
          description: User registered successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User registered successfully
        "400":
          description: Missing required fields.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing field: {field}

  /login:
    post:
      operationId: login
      summary: Logs in a user and returns a JWT token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  description: Username of the user.
                password:
                  type: string
                  description: Password of the user.
      responses:
        "200":
          description: User logged in successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT token for the authenticated user.
        "400":
          description: Missing required fields.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing field: {field}
        "401":
          description: Invalid credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid credentials

  /signout:
    post:
      operationId: signout
      summary: Signs out the current user by invalidating the JWT token.
      security:
        - bearerAuth: []
      responses:
        "200":
          description: User signed out successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User signed out successfully
        "401":
          description: Token is missing or invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    examples:
                      TokenMissing:
                        summary: Token is missing
                        value: Token is missing!
                      TokenInvalid:
                        summary: Token is invalid
                        value: Token is invalid!
                      TokenInvalidated:
                        summary: Token has been invalidated
                        value: Token has been invalidated!

    components:
      schemas:
        LeaveAccrualsRequest:
          type: object
          properties:
            person_name:
              type: string
              description: Full name of the person (First and Last name).
            business_unit:
              type: string
              description: Business unit of the person.
            legal_entity:
              type: string
              description: Legal entity of the person.
          required:
            - person_name

    LeaveApplicationRequest:
      type: object
      properties:
        Employee_Name:
          type: string
          description: Full name of the employee (First and Last name).
        Leave_Type:
          type: string
          description: Type of leave.
        Start_Date:
          type: string
          format: date
          description: Start date of the leave.
        End_Date:
          type: string
          format: date
          description: End date of the leave.
        Duration:
          type: number
          description: Duration of the leave in days.
        Reason_for_Absence:
          type: string
          description: Reason for the leave.
        Status:
          type: string
          description: Status of the leave application (default: Pending).
        Manager:
          type: string
          description: Manager's name.
      required:
        - Employee_Name
        - Start_Date
        - End_Date
        - Duration

    Employee:
      type: object
      properties:
        Person_Number:
          type: string
        First_Name:
          type: string
        Last_Name:
          type: string

    Goal:
      type: object
      properties:
        Goal_Name:
          type: string
        Goal_Description:
          type: string
        Review_Period:
          type: string
        Assigned_Date:
          type: string
          format: date
        Due_Date:
          type: string
          format: date

    securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT

  /hireEmployee:
    post:
      operationId: hireEmployee
      summary: Hire a new employee and assign courses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  format: email
                position:
                  type: string
                startDate:
                  type: string
                  format: date
                department:
                  type: string
                courses:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Employee hired and courses assigned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Invalid request data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Error inserting data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /reassignCourses:
    post:
      operationId: reassignCourses
      summary: Reassign courses for an employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Employee_Name:
                  type: string
      responses:
        "200":
          description: Courses reassigned successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Missing Employee_Name in request body.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Error during reassignment.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /viewCourses:
    post:
      operationId: viewCourses
      summary: View courses assigned to an employee
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Employee_Name:
                  type: string
      responses:
        "200":
          description: Courses retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  employee_name:
                    type: string
                  courses:
                    type: array
                    items:
                      type: object
                      properties:
                        Course_Name:
                          type: string
                        Assigned_Date:
                          type: string
                        Due_Date:
                          type: string
                        Status:
                          type: string
        "400":
          description: Missing Employee_Name in request body.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: No employee or courses found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Error retrieving data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
